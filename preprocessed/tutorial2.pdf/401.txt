【PG】377 CHAPTER  24 Computer Simulations
■The pet will be awake for 48 ticks, and then it will want to sleep for 12 ticks. You can 
wake it up, but it might be grumpy! 
■Hunger, happiness, and health will be on a scale of 0 to 8.
■When awake, hunger increases 1 unit for every tick, and happiness decreases 1 unit for 
every 2 ticks (unless walking or playing).
■When sleeping, hunger increases 1 unit for every 3 ticks.
■When eating, hunger decreases 2 units for every tick.
■When playing, happiness increases 1 unit for every tick.
■When walking, happiness and health increase 1 unit for every 2 ticks.
■When at the doctor, health increases 1 unit for every tick.
■If hunger goes to 7, health decreases 1 unit for every 2 ticks.
■If hunger goes to 8, health decreases 1 unit for every tick.
■If awakened while sleeping, happiness decreases by 4 units.
■While the program isn’t running, the pet is either awake (doing nothing) or asleep.
■When the program restarts, we’ll count how many ticks have passed, and update the 
stats for each tick that passed.

【PG】These might seem like a lot of rules, but they’re actually pretty easy to code. In fact, you 
might even want to add a few more behaviors of your own to make it more interesting. The 
code, with some explanations, is coming right up.

【PG】Simple animation
You don’t always need Pygame to do animation. You can do some simple animation in PyQt 
by using something called a timer . A timer is something that creates an event  every so often. 
Then you write an event handler  to make something happen when the timer goes off. 
This is just like writing an event handler for a user action, like clicking a button, except that 
the timer event is generated by the program, not by the user. The type of event a timer 
generates when it expires is a timeout  event.

【PG】Our Virtual Pet GUI will use two timers: one for the animation and one for the ticks. The 
animation will update every half second (0.5 seconds), and the tick will happen every 
5 seconds.
When the animation timer goes off, we’ll change the image of the pet that’s being 
displayed. Each activity (eating, playing, and so on) will have its own set of images for the 
animation, and each set will be stored in a list. The animation will cycle through all the 
images in the list. The program will figure out which list to use depending on what 
activity is happening. 

【PG】Download from Wow! eBook <www.wowebook.com>