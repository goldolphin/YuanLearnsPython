【PG】210 Hello World!
【PG】Paint over the bird with clouds or trees to erase it. The important idea here is that you have to keep track of what’s in the background, “underneath” your images, because when you move them, you have to put back or repaint what was there before. This is pretty easy for our beach ball example, because the background is just white. But if the background was a scene of a beach, it would be trickier. Instead of painting just white, we’d have to paint the correct portion of the background image. Another option would be to repaint the whole scene and then place the beach ball in its new location.

【PG】Smoother animation
So far, we have made our ball move once! Let’s see if we can get it moving in a more realistic way. When animating things on the screen, it’s usually good to move them in small steps, so the motion appears smooth. Let’s try moving our ball in smaller steps. We’re not just going to make the steps smaller—we’re going to add a loop to move the ball (because we want to make many small steps). Starting with listing 16.12, edit the code so it looks like this.

import pygame, sys
pygame.init()
screen = pygame.display.set_mode([640,480])
screen.fill([255, 255, 255])
my_ball = pygame.image.load('beach_ball.png')
x = 50
y = 50
screen.blit(my_ball, [x, y])
pygame.display.flip()
for looper in range (1, 100):
    pygame.time.delay(20)
    pygame.draw.rect(screen, [255,255,255], [x, y, 90, 90], 0)
    x = x + 5
    screen.blit(my_ball, [x, y])
    pygame.display.flip()

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
pygame.quit()

If you run this program, you should see the ball moving from its original position over to the right side of the window.

【PG】Listing 16.13 Moving a beach ball image smoothly
Add these lines
Starts a for loop time.delay value changed from 2000 to 20 Uses x and y (instead of numbers)
Download from Wow! eBook <www.wowebook.com>