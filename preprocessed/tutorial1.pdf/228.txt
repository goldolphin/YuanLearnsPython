【PG】第 16章　图　　形
【PG】import pygame, sys
pygame.init( )
screen = pygame.display.set_mode([640,480] )
screen.fill([255, 255, 255])
my_ball = pygame.image.load('beach_ball.png')
screen.blit(my_ball,[50, 50])
pygame.display.flip()
pygame.time.delay(2000)
screen.blit(my_ball, [150, 50])
pygame.draw.rect(screen, [255,255,255], [50, 50, 90, 90], 0)
pygame.display.flip()
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT: 
            running = False
pygame.quit( )
【PG】这一行“擦掉”

【PG】第一个球
【PG】我们增加了第 10行，在第一个沙滩球上画了一个白色矩形。 沙滩球图形大约 90像素宽 90像素高， 所以白色矩形的大小就是 90像素宽、90像素高。 如果运行代码清单 16-12中的程序 ，看起来沙滩球会从它原来的位置移到新位置。

【PG】底下有什么
【PG】用我们的白色背景（ 或水彩画中的蓝天 ）覆盖是很容易的。 不过如果在一个有云的天空里画了一只鸟， 又 怎么办呢？ 或者如果背景上有树呢？ 这种情况下， 就必须用云或树覆盖鸟来把它擦掉。 这里的重点是： 你必须知道背景上有什么， 也就是在你的图像“底下”是什么，因为移动图像时，必须放回或者重绘这个位置上原来的背景。

【PG】对于我们的沙滩球例子来说，这相当容易，因为背景只有白色。 不过如果背景是一个沙滩场景，就会困难得多。 不只是涂上白色，我们必须画出正确的背景图像部分。还有一个选择是重绘整个场景，然后把沙滩球放在它的新位置上。

【PG】16.8　更流畅的动画
【PG】目前为止，我们已经让球移动了一次！下面来看能不能用一种更逼真的方式让它移动。在屏幕上完成动画时，最好按小步移动，这样运动看起来是流畅的。下面试试用更小的步移动沙滩球。

【PG】我们并不只是让每一步更小，还要增加一个循环来移动沙滩球（因为我们希望建立很多小步）。在代码清单 16-12的基础上编辑代码，改为代码清单 16-13所示的程序。如果运行这个程序，应该能看到沙滩球从原先的位置一直移动到窗口的右边。

【PG】图灵社区会员 FreeLink 专享 尊重版权