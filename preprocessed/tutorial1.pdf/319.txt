【PG】21.6　更多字符串处理　　 293

【PG】Suppose you want to put these names in a list, with each item being one name. You need to split this string wherever there’s a comma. The Python method for doing this is called split() , and it works like this: 

You tell it what character to use as the split ma rker, and it gives you back a list, which is the original string broken up into parts. If we printed the output from this example, the one big string of names would be split up into individual items in a list:

You can have more than one character as the split marker. For instance, you could use 'Toby, ' as the split marker, and you’d get the following list:

This time, the string got split into two parts: all the stuff on one side of ' Toby, ' and all the stuff on the other side of ' Toby, ' . Notice that ' Toby, ' doesn’t appear in the list, because the split marker gets thrown away.

【PG】There’s one other thing to know. If you don’t give Python any split marker, it’ll split the string at any whitespace :

>>> print names
['Sam','Brad','Alex','Cameron','Toby','Gwen','Jenn','Connor']
>>> for name in names:
        print name
Sam
Brad
Alex
CameronTobyGwen
Jenn
Connor

Please not me...
don’t split me!

>>> parts = name_string.split('Toby,')

>>> print parts['Sam,Brad,Alex,Cameron', 'Gwen,Jenn,Connor']
>>> for part in parts:
      print part

Sam,Brad,Alex,Cameron
Gwen,Jenn,Connor

【PG】names = name_string.split()

这一次， 字符串会分解为两部分： 'Toby,' 左侧的所有内容， 以及'Toby,' 右侧的所有内容。注意 'Toby,' 并没有出现在列表中，因为分解标记会被丢掉。

【PG】还有一点要知道。如果没有为Python指定任何分解标记， 它会按空白符（whitespace）分解字符串：

空白符表示所有空格、制表符或换行符。

【PG】联接字符串

我们刚才了解了如何把一个字符串分解为较小的部分。那么怎样把两个或多个字符串联接起来构成一个较长的字符串呢？（在第2章中）我们已经了解到，可以使用 +操作符把字符串联接起来。这就像把两个字符串相加，只不过这称为拼接（concatenating）。图灵社区会员FreeLink专享尊重版权。