【PG】14.6 一个示例类—— HotDog　　 163
方法必须知道是哪个实例调用了它。是cartersBall需要反弹吗？还是warrensBall？
self参数会告诉方法哪个对象调用它。这称为实例引用（instance reference）。
不过先等等！调用方法时，warrensBall.bounce()的括号里没有参数，但是方法里却
有一个self参数。既然我们并没有传入任何东西，这个self参数从哪里来的？这是
Python处理对象的另外一个“魔法”。调用一个类方法时，究竟是哪个实例调用了
这个方法？这个信息（也就是实例引用）会自动传递给方法。
这就像写成：
在这种情况下，我们告诉了bounce()方法哪个球要反弹。实际上，这个代码也能正常
工作，因为写成warrensBall.bounce()时，Python在后台确实也是这么做的。顺便
说一句，self这个名字在Python中没有任何特殊的含义。只不过所有人都使用这个
实例引用名。这也是让代码更易读的一个约定。也可以把这个实例变量命名为你想
要的任何名字，不过强烈建议你遵循这个约定，因为使用self能减少混乱。我们在
第11章建立了一个热狗程序。现在作为使用对象的例子，我们来为热狗建立一个类。

【PG】14.6 一个示例类—— HotDog
在这个例子中，我们假设热狗总包括一个小面包。（否则可真是一团糟。）下面
为热狗指定一些属性和方法。
下面是热狗的属性。
cooked_level：这是一个数字，通过这个属性我们可以知道热狗烤了多长时间。
0～3表示还是生的，超过3表示半生不熟，超过5表示已经烤好，超过8表示已经
烤成木炭了！我们的热狗开始时是生的。
cooked_string：这是一个字符串，描述热狗的生熟程度。
condiments：这是热狗上的配料列表，比如番茄酱、芥末酱等。