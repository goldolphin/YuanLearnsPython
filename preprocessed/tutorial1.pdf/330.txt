【PG】第22章 文件输入与输出

如果把程序存储在e:/programs并运行，这个程序就会把e:/programs作为它的工作目录开始运行。如果有一个声音文件存储在同一个文件夹中，那么程序只需要它的文件名就可以打开这个声音文件。并不需要一个路径来找到这个文件，因为文件已经在当前位置上了，所以可以直接这样写：

【PG】记得在第19章中我们打开了我们的声音文件，比如splat.wav等等吗？我们并没有使用路径来打开它们。那是因为我告诉过你们要把声音文件复制到程序保存的同一个文件夹中。如果你在Windows资源管理器中查看，它会像这样：

注意，我把Python文件（扩展名为.py）和声音文件（扩展名为.wav）放在同一个文件夹中。当Python程序运行时，它的工作目录就是.py文件所存储的任何文件夹中。

如果你把程序保存在e:/programs中并运行这个程序，那么这个程序会以e:/programs为它的工作目录开始运行。如果在同一个文件夹中有一个声音文件，那么你的程序只需要 文件名 就可以使用这个声音文件。它不需要路径来找到那个文件，因为它已经在那里了。所以你可以这样做：

注意我们不需要使用完整路径名来打开声音文件（这将是e:/programs/splat.wav）。我们只需要使用没有路径的文件名，因为文件已经与使用它的程序在同一个文件夹中。

关于路径已经讲得够多了！

我已经讲了这么多路径和文件位置的问题。文件夹和目录，路径，工作目录等等的话题可能会让有些人感到困惑。要完全解释清楚这些问题需要大量篇幅。但这本书所讲的是编程，不是操作系统、文件位置或路径。所以如果你遇到了困难，也许可以向你的父母、老师或其他懂计算机的人寻求帮助。

这本书中的所有其他使用文件读写的例子都将文件放在与程序相同的位置，所以我们不必担心路径或使用完整路径名的问题。

【PG】22.4 打开文件

打开文件之前，你需要知道你要对文件做些什么：

如果你要使用这个文件作为输入（只查看文件中有什么，而不做任何改变），就是要打开文件完成读。

如果要创建一个全新的文件或用某个全新的文件替换现有的文件，就是要打开文件完成写。

如果要为一个现有文件增加内容，就是要打开文件完成追加。（记得在第12章我们曾经说过追加就表示做出补充吧。）

打开一个文件时，要在Python中建立一个文件对象。 （看到了吧，我说过Python中的很多东西都是对象。）建立文件对象要使用open()函数，并提供文件名，就像这样：

文件名是一个字符串（string），所以两边需要加引号。'r'部分表示我们要打开这个文件来完成读。下一节还会学习更多相关内容。

一定要了解文件对象和文件名之间的区别，这很重要。我们在程序中要用文件对象来访问文件，而文件名是Windows（以及Linux和Mac OS X）对磁盘上的文件的称呼（即文件的名字）。

两个名字——对象的名字和文件的名字——不必相同。你可以随便给对象起任何名字。例如，如果我们有一个名为notes.txt的文本文件，其中有一些笔记，我们可以这样做：

或者我们可以这样做：

一旦我们打开了文件并创建了文件对象，我们就不需要文件名了。我们在程序中使用文件对象来完成一切。

【PG】注意，我们不需要使用声音文件的完全路径名（它的完全路径名是e:/programs/splat.wav）。这里直接使用了文件名而没有带路径，因为这个文件与使用该文件的程序在同一个文件夹中。