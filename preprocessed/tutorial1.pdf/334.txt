【PG】第 22章 文件输入与输出

【PG】文本文件：这些文件包含了文本，包括字母、数字、标点符号和一些特殊字符，如换行符。

【PG】二进制文件：这些文件不包含文本，它们可能包含音乐、图片或其他类型的数据。不过由于不包含文本，所以这些文件中也没有行，因为根本不存在换行符。这说明不能对二进制文件使用readline()或readlines()。例如，如果想要从一个.wav文件读取一“行”，你根本无法知道会得到些什么。大多数情况下，你可能会得出一大堆奇怪的东西，就像这样：.wav文件最前面有一些东西看起来像是文本，不过后面就很莫名其妙了。这是因为.wav文件不包含文本，只包含声音。readline()和readlines()方法只能用于读取文本文件。

【PG】大多数情况下，如果需要使用二进制文件，就要通过Pygame或其他一些模块来加载文件，就像在第19章中一样。在那种情况下，Pygame会负责打开文件并读取二进制数据（在这个例子中，二进制数据就是音乐）。

【PG】这本书不打算介绍如何处理二进制文件。不过没准你想知道二进制是什么样子，可以为文件模式增加一个b来打开二进制文件，就像这样："rb"。在前面几节中，我们已经了解了如何将信息从文件读入程序，这称为读文件。接下来我们要学习如何将程序的信息放入到文件中，这称为写文件。

【PG】写入文件：如果要将程序中的一些信息永久保存下来，你可以在屏幕上查看它并写在纸上。但这种做法并不利用计算机的优势。更好的方法是将信息保存在硬盘上，这样即使程序不执行——事实上，即使计算机关闭——你的数据仍然存在，以后可以使用。你已经很多次这样做了。每当你保存一份学校报告、一张图片、一首歌曲或一个Python程序时，它们都被存储到硬盘上。

【PG】在我年轻的时候，我们只有纸张！没有监视器、打印机，甚至没有键盘。你用卡片打孔来“编写”代码，然后把这一摞卡片喂到一个大机器里，将打孔转换为计算机可以理解的电信号。有时要等上几天才能得到答案。哎呀，好痛苦啊！

【PG】这里的"rb"部分表示我们要打开文件并以二进制模式读取文件。