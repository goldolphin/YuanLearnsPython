【PG】第 23章　碰运气——随机性

【PG】当前花色
通常，当前花色就是明牌的花色 ，玩家或计算机出牌时要与这个花色一致 。不过，
也有例外 。出一张 8时，玩家可以叫花色 。所以如果玩家出了一张方块 8，他可能会叫
花色为黑桃 。这意味着下一张牌必须是黑桃 ，尽管现在显示的是方块 （方块 8） 。
这说明，我们需要跟踪当前花色，因为它可能与现在显示的花色不同。可以使用一个变量 active_suit 来做到：

【PG】The face-up card
当手牌第一次发放时，从牌组中翻开一张牌以开始弃牌堆。当任何玩家出牌时，他们会打出一张牌，这张牌会正面朝上放在弃牌堆上。任何时候显示在弃牌堆上的牌被称为“明牌”。我们可以通过为弃牌堆制作一个列表来跟踪这一点，就像我们在列表23.5的测试代码中为“手牌”制作一个列表一样。但是，我们实际上并不关心弃牌堆中的所有牌，我们只关心最近添加的牌。因此，我们可以使用单个 Card 对象的实例来跟踪它。

当玩家或计算机打出一张牌时，我们将采取以下步骤：

【PG】活跃花色
通常，活跃花色（玩家或计算机试图匹配的花色）与明牌花色相同。但也有例外。当出现 8 时，玩家会叫花色。因此，如果他打出方块 8，他可能会叫梅花为花色。这意味着下一次出牌必须匹配梅花，尽管显示的是方块（方块 8）。这意味着我们需要跟踪活跃花色，因为它可能与显示的花色不同。我们可以使用一个变量active_suit来做到这一点：

每当打出一张牌时，我们将更新活跃花色，当玩家打出 8 时，他会选择新的活跃花色。

【PG】玩家回合
当轮到玩家的回合时，我们需要做的第一件事情就是获得他要做什么的选择。他可以从手牌中出一张牌（如果可能的话），或者从牌组中抽一张牌。如果我们正在制作此程序的 GUI 版本，我们将让玩家点击他想要打出的牌，或者点击牌组来抽牌。但是，我们将从一个基于文本的版本的程序开始，因此他必须键入一个选择，然后我们必须检查他键入了什么，并找出他想要做什么以及该输入是否有效。

为了让你了解玩家需要提供什么样的输入，我们将查看一个示例游戏。玩家的输入以粗体显示。

【PG】只要出一张牌，我们就会更新当前花色，玩家出一张 8 时，他会选择新的当前花色。

【PG】轮到玩家选择
当轮到玩家出牌时，首先我们需要做的是获得他选择做什么。他可能从手中出一张牌（如果可能的话），或者从这副牌中抽一张牌。如果建立这个程序的一个 GUI 版本，我们会让玩家点击他想出的牌，或者点击这副牌来抽牌。不过现在先建立这个程序的一个基于文本的版本，所以玩家必须键入他的选择，然后我们要检查他键入的内容，明确他想做什么，还要检查输入是否合法。

玩家需要提供什么样的输入呢？为了让你对这些输入有所认识，下面看一个示例游戏。玩家的输入用粗体显示：