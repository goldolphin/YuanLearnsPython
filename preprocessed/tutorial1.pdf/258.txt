【PG】第 18章　一种新的输入——事件
述修改。运行这个程序，看看它的效果。

【PG】嘿，要知道我们从第 1章就已经开始编程了！ 不
过，因为现在开始使用图形、动画精灵和鼠标，所以变得更有意思了。前面说过会谈到这些内容。不过你要跟现在我们要真正开始编程了！
上我的思路，先来学习一些基础知识。

【PG】18.4　定时器事件
在这一章中， 目前为止我们已经见过键盘事件和鼠标事件。 另 一种非常有用的事件（ 特别是在游戏和仿真中 ）是定时器事件（ timer event） 。定时器会按固定的间隔生成事件， 就 像你的闹钟一样。如果你设好闹钟，并把闹铃打开，每天它都会在固定的时刻响起来。

【PG】可以把 Pygame定 时器设置为任意间隔。 如果定时器到时间， 它会创建一个能够
被事件循环检测到的事件。 那 么它会生成什么类型的事件呢？ 它生成的是一种用户
事件（user event） 。

【PG】Pygame有很多预定义的事件类型 。这 些事件会编号（ 从0开始） ，它们还有自己的名字以便我们记住。 我 们已经见过一些事件名， 比如MOUSEBUTTONDOWN 和KEYDOWN。除此以外，Pygame 还为用户定义的事件（user-deﬁned event） 留出了很大空间。这 些事件不是 Pygame为特定事件预留的， 你可以用它们表示任何事情， 其中之一就是定时器。

【PG】要在 Pygame中设置定时器 ，要使用set_timer() 函数，如下：
pygame.time.set _timer(EVENT _NUMBER, interval)
EVENT_NUMBER是事件编号， interval 是定时器多长时间（ 单位是毫秒 ）到期并生成一个事件。
要使用什么 EVENT_NUMBER呢？应当使用 Pygame还没有用过的一个编号（ 也就是说，尚未将这个编号用于其他事件 ） 。可以询问 Pygame哪些编号已经占用。 可以