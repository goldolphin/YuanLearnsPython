【PG】第23章 碰运气——随机性

【PG】如果玩家想出牌，要确保出牌是合法的：
【PG】■ 这张牌必须是合法的牌；
【PG】■ 这张牌必须在玩家的手里；
【PG】■ 这张牌要与面朝上的牌花色或点数一致，或者是一个 8。
【PG】如果玩家出一张 8，叫一个新的花色（并确保选择的是一个合法的花色）。
【PG】轮到计算机选择（稍后介绍）。
【PG】确定游戏何时结束。
【PG】统计得分。
【PG】在本章后面，我们会逐条地完成上面的各项工作。其中一些工作只需一行或两行代码就可以完成，有些可能稍长一些。对这些稍长的代码，我们会创建函数，以便从主循环调用。

【PG】主循环
【PG】介绍具体细节之前，首先要明白程序的主循环。基本说来，玩家和计算机必须轮流选择（出牌或抽牌），直到有人获胜或者双方都无法继续。如代码清单 23-6所示。

【PG】代码清单 23-6　Crazy Eights 的主循环

【PG】主循环部分要确定游戏何时结束。可能在玩家或计算机出完手上的所有牌时结束，也可能双方手上都还有牌但是都无法继续（也就是说双方都不能合法地出牌），此时游戏也会结束。轮到玩家出牌时，如果玩家无法继续，会在相应代码中设置 blocked 变量，轮到计算机出牌时，如果计算机无法继续，同样会在相应代码中设置blocked变量。

【PG】对于模拟骰子的部分，我们将其拆分为两段，放在两个段落内。

【PG】单个骰子
这种情况下，只需要用 randint() 函数生成一个 1 到 6 之间的随机数，就可以模拟一次骰子的扔出。代码如下：
import random
die_roll = random.randint(1, 6)

【PG】两个骰子
如果想要模拟两个骰子，可以用两次 randint() 函数生成两个随机数字，然后加起来得到点数的总和。代码如下：
import random
die1 = random.randint(1, 6)
die2 = random.randint(1, 6)
roll = die1 + die2

【PG】如果想要计算每种点数的出现次数，可以用一个列表来记录每种点数出现的次数。代码如下：
import random
totals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
for i in range(1000):
    dice_total = random.randint(2, 12)
    totals[dice_total-2] += 1
for i in range(2, 13):
    print("Total", i, "came up", totals[i-2], "times.")

【PG】以上为两个骰子的部分。

注意代码清单 23-6不是一个完整的程序，所以如果试图运行这个代码，你会得到一些错误提示。