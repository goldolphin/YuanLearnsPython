【PG】第 18章　一种新的输入——事件
【PG】import pygame, sys                                    
pygame.init()                                        
screen = pygame.display.set_mode([640,480])         
background = pygame.Surface(screen.get_size())       
background.fill([255, 255, 255])                    
clock = pygame.time.Clock()  
class Ball(pygame.sprite.Sprite):                                     
    def __init__(self, image_file, speed, location):           
        pygame.sprite.Sprite.__init__(self)                          
        self.image = pygame.image.load(image_file)                 
        self.rect = self.image.get_rect()                              
        self.rect.left, self.rect.top = location                      
        self.speed = speed                                            
    def move(self):                                                  
        if self.rect.left <= screen.get_rect().left or \
                self.rect.right >= screen.get_rect().right:            
            self.speed[0] = - self.speed[0]         
        newpos = self.rect.move(self.speed)    
        self.rect = newpos 
my_ball = Ball('beach_ball.png', [10,0], [20, 20])  
pygame.time.set_timer(pygame.USEREVENT, 1000)   
direction = 1 running = True
while running: 
    for event in pygame.event.get():  
        if event.type == pygame.QUIT: 
            running = False  
        elif event.type == pygame.USEREVENT:                             
            my_ball.rect.centery = my_ball.rect.centery + (30*direction)             if my_ball.rect.top <= 0 or  \
            my_ball.rect.bottom >= screen.get_rect().bottom:         
                direction = -direction             
    clock.tick(30) 
    screen.blit(background, (0, 0))                   
    my_ball.move()                                   
    screen.blit(my_ball.image, my_ball.rect)       
    pygame.display.flip()                
pygame.quit( )

【PG】第 23章 Take a Chance—Randomness
【PG】This would do exactly the same thing as the previous example. The choice() function randomly chooses an item from a list. In this case, the list is the numbers from 1 to 6.
【PG】More than one die
【PG】What if you want to simulate rolling two dice? If you’re just going to add up the two dice to get the total, you might think of doing it this way:
【PG】After all, the total of two dice can be from 2 to 12, right? Well, yes and no. You will get a random number between 2 and 12, but not in the same way as adding up two random numbers from 1 to 6. What that code line does is like rolling one big 11-sided die, not two 6-sided dice. But what’s the difference? That gets into a topic called probability. The easiest way to see the difference is to try it out and see.

【PG】Let’s roll the dice many times and keep track of how many times each total comes up. We’ll do that with a loop and a list. The loop will roll the dice, and the list will keep track of how many times each total comes up. Let’s start with the single 11-sided die, as shown in listing 23.1.
【PG】import random
totals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  
for i in range(1000):
    dice_total = random.randint(2, 12)
    totals[dice_total] += 1  
    
for i in range (2, 13):    print "total", i, "came up", totals[i], "times"
【PG】The list has indexes from 0 to 12, but we won’t use the first two, because we don’t care about totals 0 or 1—they’ll never happen B. When we get a result, we add 1 to that list item C. If the total is 7, we add one to totals[7]. So totals[2] is the number of 2s we got, totals[3] is the number of 3s we got, and so on.
【PG】If you run this code, you should get something like this:Listing 23.1 Rolling a single 11-sided die 1,000 timestwo_dice = random.randint(2, 12)
List has 13 items, with index 0 to 12B
Adds 1 to the count of this totalC
total 2 came up 95 times
total 3 came up 81 timestotal 4 came up 85 times
total 5 came up 86 times
total 6 came up 100 timestotal 7 came up 85 times
total 8 came up 94 times
total 9 came up 98 timestotal 10 came up 93 times
total 11 came up 84 times
total 12 came up 99 times

【PG】第 23章 Take a Chance—Randomness
【PG】This would do exactly the same thing as the previous example. The choice() function randomly chooses an item from a list. In this case, the list is the numbers from 1 to 6.
【PG】More than one die
【PG】What if you want to simulate rolling two dice? If you’re just going to add up the two dice to get the total, you might think of doing it this way:
【PG】After all, the total of two dice can be from 2 to 12, right? Well, yes and no. You will get a random number between 2 and 12, but not in the same way as adding up two random numbers from 1 to 6. What that code line does is like rolling one big 11-sided die, not two 6-sided dice. But what’s the difference? That gets into a topic called probability. The easiest way to see the difference is to try it out and see.

【PG】Let’s roll the dice many times and keep track of how many times each total comes up. We’ll do that with a loop and a list. The loop will roll the dice, and the list will keep track of how many times each total comes up. Let’s start with the single 11-sided die, as shown in listing 23.1.
【PG】import random
totals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  
for i in range(1000):
    dice_total = random.randint(2, 12)
    totals[dice_total] += 1  
    
for i in range (2, 13):    print "total", i, "came up", totals[i], "times"
【PG】The list has indexes from 0 to 12, but we won’t use the first two, because we don’t care about totals 0 or 1—they’ll never happen B. When we get a result, we add 1 to that list item C. If the total is 7, we add one to totals[7]. So totals[2] is the number of 2s we got, totals[3] is the number of 3s we got, and so on.
【PG】If you run this code, you should get something like this:Listing 23.1 Rolling a single 11-sided die 1,000 timestwo_dice = random.randint(2, 12)
List has 13 items, with index 0 to 12B
Adds 1 to the count of this totalC
total 2 came up 95 times
total 3 came up 81 timestotal 4 came up 85 times
total 5 came up 86 times
total 6 came up 100 timestotal 7 came up 85 times
total 8 came up 94 times
total 9 came up 98 timestotal 10 came up 93 times
total 11 came up 84 times
total 12 came up 99 times。可以用它把正常情况下应该写在一行上的内容分为两行来写。 （不过不要在 \ 后面加任何空格，否则行联接符将不起作用。 ）
保存并运行代码清单18-3中的程序， 应该能看到球来回移动（从一边到另一边），另外还会向上或向下移动30个像素（每秒移动一次）。向上或向下移动就来源定时器事件。

【PG】第 23章 Take a Chance—Randomness
【PG】This would do exactly the same thing as the previous example. The choice() function randomly chooses an item from a list. In this case, the list is the numbers from 1 to 6.
【PG】More than one die
【PG】What if you want to simulate rolling two dice? If you’re just going to add up the two dice to get the total, you might think of doing it this way:
【PG】After all, the total of two dice can be from 2 to 12, right? Well, yes and no. You will get a random number between 2 and 12, but not in the same way as adding up two random numbers from 1 to 6. What that code line does is like rolling one big 11-sided die, not two 6-sided dice. But what’s the difference? That gets into a topic called probability. The easiest way to see the difference is to try it out and see.

【PG】Let’s roll the dice many times and keep track of how many times each total comes up. We’ll do that with a loop and a list. The loop will roll the dice, and the list will keep track of how many times each total comes up. Let’s start with the single 11-sided die, as shown in listing 23.1.
【PG】import random
totals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  
for i in range(1000):
    dice_total = random.randint(2, 12)
    totals[dice_total] += 1  
    
for i in range (2, 13):    print "total", i, "came up", totals[i], "times"
【PG】The list has indexes from 0 to 12, but we won’t use the first two, because we don’t care about totals 0 or 1—they’ll never happen B. When we get a result, we add 1 to that list item C. If the total is 7, we add one to totals[7]. So totals[2] is the number of 2s we got, totals[3] is the number of 3s we got, and so on.
【PG】If you run this code, you should get something like this:Listing 23.1 Rolling a single 11-sided die 1,000 timestwo_dice = random.randint(2, 12)
List has 13 items, with index 0 to 12B
Adds 1 to the count of this totalC
total 2 came up 95 times
total 3 came up 81 timestotal 4 came up 85 times
total 5 came up 86 times
total 6 came up 100 timestotal 7 came up 85 times
total 8 came up 94 times
total 9 came up 98 timestotal 10 came up 93 times
total 11 came up 84 times
total 12 came up 99 times。可以用它把正常情况下应该写在一行上的内容分为两行来写。 （不过不要在 \ 后面加任何空格，否则行联接符将不起作用。 ）