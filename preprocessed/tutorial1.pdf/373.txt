【PG】24.2 Lunar Lander　　 347

发动机的作用力取决于燃烧了多少燃料 。有时这个作用力会大于重力 ，有时可能比重力小 。发动机关闭时 ，作用力就为 0，此时只剩下重力 。

要得到对飞船的总作用力或净作用力 ，只需把两个作用力相加 。因为它们的方向相反，所以一个为正 ，另一个为负 。

一旦得到飞船上的净作用力 ，可以利用一个公式得出它的速度和位置 。

我们的仿真必须跟踪以下几点 。
飞船距离月球的高度 ，以及飞船的速度和加速度 。 
飞船的质量 （随着燃料的消耗 ，质量会变化 ） 。 
发动机的推力或作用力 。使用的推力越大 ，燃料燃烧得就越快 。 
飞船上有多少燃料 。推进器燃烧燃料时 ，飞船会变轻 ，但是如果所有燃料都 
耗光，就不再有推力 。
飞船上的重力 。这取决于月球的大小 ，以及飞船和燃料的质量 。 

【PG】又是 Pygame

我们还是使用 Pygame建立这个仿真 。这里将用 Pygame的时钟滴答作为我们的时间单位 。对于每一个滴答 ，我们会检查对飞船的净作用力 ，并更新高度 、速度、加速度和剩余的燃料 。然后使用这个信息更新图片和文本 。

由于动画非常简单 ，这里不打算用一个动画精灵表示飞船 。不过我们会对推进器使用一个精灵 （灰色矩形 ） ，因为这样就能很容易地用鼠标拖动 。燃料表是用 Pygame的draw.rect() 方法画的两个矩形 。文本用pygame.font 对象建立 ，就像前面 PyPong中的做法一样 。

代码要完成以下工作 。
初始化游戏 —建立 Pygame窗口，加载图像 ，为变量设置一些初始值 。 
为推进器定义精灵类 。 
计算高度 、速度、加速度和燃料消耗 。 
显示这个信息 。 
更新燃料表 。 
显示火箭尾焰 （取决于推力 ，尾焰大小会改变 ） 。 
把所有内容 “块移”（blit）到屏幕，检查鼠标事件 ，更新推进器位置 ，并检查飞船是否已经着陆 —这就是主 Pygame事件循环 。 
显示“游戏结束 ”和最终统计信息 。 

图灵社区会员 FreeLink 专享 尊重版权