【PG】附录 C　自测题答案
【PG】381  Answers to Self-Test Questions
【PG】Try it out

【PG】1. A class for a bank account might look like this:
And here’s some code to test it and 
make sure it is working:

【PG】2. To make an interest acco unt, make a subclass of BankAccount , and create a method to 
add interest:
Here’s some 
code to test it:

【PG】class BankAccount:
    def __init__(self, acct_number, acct_name):
        self.acct_number = acct_number
        self.acct_name = acct_name        
        self.balance = 0.0
    def displayBalance(self):
        print "The account balance is:", self.balance
    def deposit(self, amount):
        self.balance = self.balance + amount
        print "You deposited", amount
        print "The new balance is:", self.balance
    def withdraw(self, amount):
        if self.balance >= amount:            
            self.balance = self.balance - amount            
            print "You withdrew", amount
            print "The new balance is:", self.balance
        else:            
            print "You tried to withdraw", amount
            print "The account balance is:", self.balance
            print "Withdrawal denied.  Not enough funds."

【PG】myAccount = BankAccount(234567, "Warren Sande")
print "Account name:", myAccount.acct_name
print "Account number:", myAccount.acct_number
myAccount.displayBalance()
myAccount.deposit(34.52)
myAccount.withdraw(12.25)
myAccount.withdraw(30.18)

【PG】class InterestAccount(BankAccount):
    def addInterest(self, rate):
        interest = self.balance * rate        
        print "adding interest to the account,",rate * 100,"percent"
        self.deposit (interest)

【PG】myAccount = InterestAccount(234567, "Warren Sande")
print "Account name:", myAccount.acct_name
print "Account number:", myAccount.acct_number
myAccount.displayBalance()
myAccount.deposit(34.52)
myAccount.addInterest(0.11)

【PG】2.  要建立一个利息账户， 需要建立一个 BankAccount 子类，并创建一个方法来
增加利息：

【PG】class InterestAccount(BankAccount):
    def __init__(self, acct_number, acct_name, rate):
        BankAccount.__init__(self, acct_number, acct_name)        
        self.rate = rate
    def addInterest (self):
        interest = self.balance * self.rate
        print"adding interest to the account,",self.rate * 100, "percent"
        self.deposit (interest)

【PG】下面是一些测试代码：
myAccount = InterestAccount(234567, "Warren Sande", 0.11 )
print "Account name:", myAccount.acct_name
print "Account number:", myAccount.acct_number
myAccount.displayBalance()
myAccount.deposit(34.52 )
myAccount.addInterest( )

【PG】图灵社区会员 FreeLink 专享 尊重版权