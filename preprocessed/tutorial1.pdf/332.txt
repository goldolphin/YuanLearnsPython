【PG】第22章 文件输入与输出

把它命名为 notes.txt，保存在Python程序所在的位置，然后关闭记事本。
如果用一个小Python程序打开并读取这个文件，代码可能如代码清单22-1所示。

代码清单22-1 打开和读文件

Reading a file
As I mentioned in the last section, we open a file and create a file object using the open() function. This is one of Python’s built-in functions. To open the file for reading, you use 'r' as the second argument, like this:

如果尝试打开不存在的文件进行读取操作，将会报错。（毕竟，你不能读一个不存在的文件，对吗？）

Python还有另外几个内建函数可以获取打开的文件信息并将其读取到我们的程序中。要从文件中读取文本行，可以使用readlines()方法，就像这样：

This will read the whole file and make a list, with one line of text in each item of the list. 
Let’s say the notes.txt  file contained a 
short list of things you need to do today:

我们可以使用记事本等程序创建这个文件。事实上，我们为什么不现在就使用记事本（或你喜欢的文本编辑器）创建一个这样的文件？将其命名为notes.txt，并将其与你的Python程序放在相同的位置。然后关闭记事本。

如果我们用一个短小的Python程序打开并读取这个文件，代码可能看起来像listing22.1那样。

my_file = open('notes.txt', 'r')
lines = my_file.readlines()
print lines

输出将会是这样的（取决于你在文件中输入的内容）：

这里从文件读取了文本行，并放入一个名为lines的列表中。这个列表中的每一项都是一个字符串，包含从文件读取的一行。请注意前两行末尾的\n，这些是分隔文件中各行的换行符。我们创建文件时在这里按下了回车键。如果键入最后一行后按了回车键，那么在第三项后面也会有一个\n。

代码清单22-1的程序中还要增加一点。处理完文件时，一定要关闭文件：

Well, Carter, if another program needs to use the file and our program hasn’t closed it, the other program might not be able to access the file. It’s generally a good idea to close files when you’re done using them.

一旦把文件读取为程序中的一个字符串列表，接下来就可以任意处理它了。这个列表与其他Python列表是一样的，所以可以循环处理、排序、追加元素、删除元素等等。这些字符串也像其他字符串一样，可以打印、转换为int或float（如果包含数字的话）、用作GUI中的标签，或者完成能够对字符串做的其他处理。

一次读取一行

readlines()方法会读取文件的所有行，直到文件末尾。如果你想一次只读取一行，可以使用readline()方法，如下：

这将只读取文件的第一行。如果在同一程序中再次使用readline()，Python将会记住上次读取到哪里。因此，第二次使用readline()时，将会读取文件的第二行。代码清单22.2展示了一个例子。

my_file = open('notes.txt', 'r')
first_line = my_file.readline()
second_line = my_file.readline()
print "first line = ", first_line
print "second line = ", second_line
my_file.close()

该程序的输出将会是这样的：

Listing22.2 使用readline()多次

my_file.close()
first_line = my_file.readline()

【参考译文】

本篇文献主要介绍了Python中文件输入和输出的相关内容。首先需要使用open()函数打开该文件并创建一个文件对象，该函数是Python内置函数之一。为了读取该文件，需要将第二个参数设为'r'。通过内建函数，可以从文件中获取信息并将其读取到程序中。在通过程序读取文件后，可以像操作其他Python列表那样进行操作，包括循环、排序、追加、删除等。如果只需要读取一行内容，可以使用readline()方法，通过多次使用该方法便可以逐行读取文件的每一行内容。处理完文件后，在程序中务必关闭文件，以便其他程序可以打开和访问该文件。

【译者感言】

对于做程序开发的人士来说，文件输入输出是非常重要的一部分，这也是编程中常常遇到的问题。该文献逐步讲解了文件输入输出的相关内容，可谓非常详细。