【PG】19.8　为 PyPong添加音乐　　 257

【PG】19.8　为 PyPong添加音乐

还有一件事要做， 就是添加音乐。 需要加载音乐文件， 设置音量， 然后开始播放。我们希望玩游戏期间音乐一直在重复，所以会使用特殊值 -1，如下：

pygame.mixer.music.load("bg _music.mp3")
pygame.mixer.music.set _volume(0.3)
pygame.mixer.music.play(-1)

这个代码可以放在主 while循环前面的任意位置。 它会开始播放音乐。 现在只需要在最后让音乐停下来， 有 一个很好的办法来做到这一点。 pygame.mixer.music有一个fadeout() 方法，会让音乐淡出（ 逐渐减弱直到消失 ） ，而不是戛然而止。 只需要告诉它淡出需要多长时间，例如：pygame.mixer.music.fadeout(2000)

这里设置为 2000毫秒，也就是 2秒。这一行可以与 done = True 设置放在同一个位置。 （这个设置在前在后都无关紧要 。 ）

现在程序已经增加了音效和音乐 。试 试看听起来怎么样！ 也许你想看看如何把所有这些内容整合在一起， 下 面给出这个程序的最后版本， 也就是代码清单 19-5。一定要确保 wackyball.bmp 和所有声音文件与程序在同一个文件夹中 。 

代码清单 19-5　有声音和音乐的 PyPong

import pygame, sys 
 
class MyBallClass(pygame.sprite.Sprite): 
    def __init__(self, image_file, speed, location = [0,0]): 
        pygame.sprite.Sprite.__init__(self)   
        self.image = pygame.image.load(image_file)  
        self.rect = self.image.get_rect() 
        self.rect.left, self.rect.top = location         self.speed = speed 
 
    def move(self):         global points, score_text 
        self.rect = self.rect.move(self.speed)  
        if self.rect.left < 0 or self.rect.right > screen.get_width() :
            self.speed[0] = -self.speed[0]             if self.rect.top < screen.get_height():  
                hit_wall.play()             
                                               
        if self.rect.top <= 0 : 
            self.speed[1] = -self.speed[1]             points = points + 1 
            score_text = font.render(str(points), 1, (0, 0, 0)) 
            get_point.play()   

class MyPaddleClass(pygame.sprite.Sprite): 
    def __init__(self, location = [0,0]):  
        pygame.sprite.Sprite.__init__(self) 
        image_surface = pygame.surface.Surface([100, 20]) 
        image_surface.fill([0,0,0])         self.image    = image_surface.convert() 
        self.rect = self.image.get_rect() 
        self.rect.left, self.rect.top = location 

pygame.init()                      
pygame.mixer.init( )
pygame.mixer.music.load("bg_music.mp3")  
pygame.mixer.music.set_volume(0.3)      
pygame.mixer.music.play(-1)       
hit = pygame.mixer.Sound("hit_paddle.wav")                          
hit.set_volume(0.4)                                                 
new_life = pygame.mixer.Sound("new_life.wav" )
new_life.set_volume(0.5)                                            
splat = pygame.mixer.Sound("splat.wav")                             
splat.set_volume(0.6)               
hit_wall = pygame.mixer.Sound("hit_wall.wav")                       
hit_wall.set_volume(0.4)                                          
                              
get_point = pygame.mixer.Sound("get_point.wav")                     
get_point.set_volume(0.2)                     
bye = pygame.mixer.Sound("game_over.wav")  
bye.set_volume(0.6)                          
screen = pygame.display.set_mode([640,480]) 
clock = pygame.time.Clock() 

# 球碰到两边的墙时播放声音
# 球碰到顶边（玩家得分）时播放声音